const userDao = require('../daos/userDao')
const vcodeDao = require('../daos/vcodeDao')
const mailServer = require('../server/mailServer')

/**
 * 发送注册验证码
 */
module.exports.sendCode = async (ctx, next) => {

    let body = ctx.request.body;

    // 验证邮箱|手机号是否已经注册
    let uResult = await userDao.prototype.countByQuery({ "email": body.email }).then(e => {
        return e;
    });

    if (uResult.data != 0) {
        ctx.body = { "err": uResult.err, "result": { "count": false } }
        return;
    }

    // 发送验证码
    let code = Math.floor(Math.random() * 10000);
    let vResult = await vcodeDao.prototype.create({ "relation_id": body.email, "code": code, "create_date": Date.now() }).then(e => {
        return e;
    });

    let status = await mailServer.send({
        to: body.email, // 接受邮箱
        subject: '【狐狸笑】注册验证码', // 标题
        html: `您的验证码是：<span style="color:red;font-size:16px;">${code}</span>，有效时间：10分钟` // 内容
    }).then(e => {
        return e;
    });

    ctx.body = { "err": vResult.err, "result": { "status": status } }

}

/**
 * 用户注册
 * @param {*} ctx 
 * @param {*} next 
 */
module.exports.register = async (ctx, next) => {

    let body = ctx.request.body;

    // 验证验证码是否输入错误
    console.log(new Date(new Date().getTime() - 1000 * 60 * 5).getTime());
    let vResult = await vcodeDao.prototype.countByQuery({ "email": body.email, "code": body.validateCode, "create_date": { "$gte": new Date(new Date().getTime() - 1000 * 60 * 5) } }).then(e => {
        return e;
    });

    if (vResult.data == 0) {
        ctx.body = { "err": vResult.err, "result": { "vcode": false } }
        return;
    }

    // 用户注册
    flag = await userDao.prototype.create({ "email": body.email, "password": body.password, "create_date": new Date(), "update_date": new Date() }).then(e => {
        return e;
    });

    ctx.body = { "err": result.err, "result": { "count": result.data } }
}