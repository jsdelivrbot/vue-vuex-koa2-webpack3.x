<template>
  <div class="chat">
    <header>
      <router-link class="logo" to="/message">新消息（{{noticeCount}}条）</router-link>
      <h6>{{targetName}}</h6>
      <i></i>
    </header>
    <ul class="msg" :style="{height:msgHeight}">
      <li v-for="(item, index) in messageList" :key="index" :class="item.from">
        <img :src="item.user.portrait_img_src || require('./images/single.svg')" />
        <div class="info">
          <label>{{item.user.nickname}}
            <span>[{{item.date}}]</span>
          </label>
          <p>{{item.msg}}</p>
        </div>
      </li>
    </ul>
    <div class="operation">
      <ul class="tool"></ul>
      <form class="focusing" action="#">
        <input class="content" type="send" v-model="msg" />
        <i class="emoticon"></i>
        <!-- <i class="media"></i> -->
        <i @click="sendMsg" class="send"></i>
      </form>
    </div>
  </div>
</template>
<style lang="scss" scoped>
.chat {
  header {
    position: fixed;
    width: 100%;
    top: 0;
    height: 2.8rem;
    line-height: 2.8rem;
    text-align: center;
    background: #008b8b;
    overflow: hidden;
    a {
      width: 35%;
      display: block;
      float: left;
      font-size: 0.8rem;
      color: #fff;
      background: url("./images/towards-left.svg") center left 0.5rem no-repeat;
      background-size: 15%;
      text-indent: 0.8rem;
    }
    h6 {
      width: 45%;
      padding-right: 15%;
      float: left;
      font-size: 1.2rem;
      color: #fff;
    }
    i {
      display: block;
      width: 20%;
      float: left;
      height: 100%;
      background: url("./images/more.svg") center right 0.5rem no-repeat;
      background-size: 40%;
    }
  }
  .msg {
    overflow: scroll;
    position: fixed;
    width: 100%;
    top: 2.8rem;
    li {
      width: 100%;
      min-height: 3rem;
      margin: 0.5rem 0;
      padding-top: 0.25rem;
      overflow: hidden;
      img {
        height: 2.5rem;
        border-radius: 5rem;
      }
      .info {
        label {
          height: 1.2rem;
          line-height: 1.4rem;
          display: block;
          color: #666;
          font-size: 0.8rem;
          span {
            color: #999;
            margin-left: 0.5rem;
          }
        }
        p {
          font-size: 0.8rem;
          min-height: 1.3rem;
          line-height: 1.5rem;
          display: block;
          max-width: 19rem;
        }
      }
      &.other {
        img {
          float: left;
          margin-left: 0.5rem;
        }
        .info {
          float: left;
          margin-left: 0.6rem;
          label {
            text-align: left;
          }
          p {
            text-align: left;
          }
        }
      }
      &.my {
        img {
          float: right;
          margin-right: 0.5rem;
        }
        .info {
          float: right;
          margin-right: 0.5rem;
          label {
            text-align: right;
          }
          p {
            text-align: right;
          }
        }
      }
    }
  }
  .operation {
    position: fixed;
    bottom: 0;
    width: 100%;
    height: 3.2rem;
    padding: 0.35rem 0;
    border-top: 1px solid #eee;
    background: #efefef;
    .focusing {
      margin: 0.25rem 0.6rem;
      height: 2rem;
      input {
        width: 20rem;
        height: 2rem;
        line-height: 2rem;
        border-radius: 0.2rem;
        border: 1px solid #ddd;
        float: left;
        margin-right: 0.4rem;
        text-indent: 0.5rem;
      }
      i {
        width: 1.9rem;
        margin: 0 0.1rem;
        height: 1.9rem;
        float: left;
        display: block;
        &.emoticon {
          background: url("./images/emoticon.svg") no-repeat center center;
          background-size: contain;
        }
        &.media {
          background: url("./images/media.svg") no-repeat center center;
          background-size: contain;
        }
        &.send {
          background: url("./images/send.svg") no-repeat center center;
          background-size: contain;
        }
      }
    }
  }
}
</style>

<script>

import { Navbar, TabItem } from 'mint-ui';

export default {
  data() {
    return {
      selected: "artificial",
      noticeCount: 0,
      messageList: [],
      msg: ''
    }
  },
  sockets: {
    receiveMsg: function (o) {
      this.messageList.push(o);
    }
  },
  computed: {

    targetName: function () {
      return this.$route.query.nickname;
    },
    msgHeight: function () {

      return window.screen.height - 3.2 * 16 - 2.8 * 16;
    }
  },
  methods: {

    sendMsg: function () {

      let query = this.$route.query,
        userId = query.userId;

      this.$socket.emit('sendMsg', {
        toUserId: userId,
        msg: this.msg
      });

      this.$socket.emit('sendMsg', {
        toSocketId: this.$socket.id,
        msg: this.msg
      });

      this.msg = "";
    }
  }
}

</script>